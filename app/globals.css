@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Light Theme Variables using your palette */
    --background: 0 0% 100%; /* White */
    --foreground: 203 100% 16%; /* Prussian Blue for general text */

    --card: 0 0% 100%; /* White */
    --card-foreground: 203 100% 16%; /* Prussian Blue */

    --popover: 0 0% 100%; /* White */
    --popover-foreground: 203 100% 16%; /* Prussian Blue */

    --primary: 206 100% 49%; /* Picton Blue */
    --primary-foreground: 0 0% 100%; /* White text on Picton Blue */

    --secondary: 204 94% 40%; /* Steel Blue */
    --secondary-foreground: 0 0% 100%; /* White text on Steel Blue */

    --muted: 200 100% 29%; /* Lapis Lazuli - can be used for muted backgrounds or text */
    --muted-foreground: 0 0% 90%; /* Lighter text on Lapis Lazuli if used as BG, or Lapis Lazuli itself if on white BG */
    /* If Lapis Lazuli is for text on white: --muted-foreground: 200 100% 29%; */


    --accent: 206 100% 49%; /* Picton Blue (can be same as primary or different) */
    --accent-foreground: 0 0% 100%; /* White */

    --destructive: 0 84.2% 60.2%; /* Standard Red for errors */
    --destructive-foreground: 0 0% 100%; /* White */

    --border: 0 0% 89.8%; /* Light gray for borders (e.g., hsl(214.3 31.8% 91.4%)) */
    --input: 0 0% 89.8%; /* Light gray for inputs */
    --ring: 206 100% 49%; /* Picton Blue for focus rings */

    --radius: 0.5rem; /* Default border radius */

    /* You can also define your direct color names as CSS variables if you want to use them that way */
    /* --zenith-picton-blue-hsl: 206 100% 49%; */
    /* --zenith-rich-black-hsl: 203 61% 8%; */
  }

  /* No .dark class for now as you requested light theme only */
  /*
  .dark {
    --background: 203 61% 8%; // Rich Black for dark BG
    --foreground: 0 0% 90%;   // Light gray/white text

    // ... other dark mode variables ...
  }
  */

  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1; /* Optional: for better font rendering */
  }
}
